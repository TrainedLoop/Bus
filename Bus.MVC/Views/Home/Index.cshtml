@model List<Bus.API.BusPosition>

@{
    ViewBag.Title = "Cade meu Ônibus?";
}

<style>
    #map-canvas {
        height: 500px;
        width: 100%;
        margin: 0px;
        padding: 0px;
    }
    p{
        font-size:small
    }
</style>
@section scripts {
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
    <script>
        var map;
        function initialize() {
            //Init
            var padrao = new google.maps.LatLng(-22.897377, -43.532513);
            var pos = padrao;
            var mapOptions = {
                zoom: 12,
                center: pos,
            };
            map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

            //Geolocation
            if(navigator.geolocation) {
                browserSupportFlag = true;
                navigator.geolocation.getCurrentPosition(function(position) {
                    initialLocation = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
                    map.setCenter(initialLocation);

                    var marker_0 = new google.maps.Marker({
                        position:  new google.maps.LatLng(position.coords.latitude,position.coords.longitude ),
                        map: map,
                        animation: google.maps.Animation.DROP,
                        icon: "/Content/user.png" 
                    });

                }, function() {
                    handleNoGeolocation(browserSupportFlag);
                });
            }
            //Geolocation on Error with model
            @if (Model != null && Model.Count != 0)
            {<text>
            function handleNoGeolocation(errorFlag) {
                if (errorFlag == true) {
                    alert("Geolocalização falhou.");
                    initialLocation = new google.maps.LatLng(@Model[0].Lat.ToString().Replace(',', '.'), @Model[0].Lng.ToString().Replace(',', '.'));
                } else {
                    alert("Seu broweser náo suporta geolocalização.");
                    initialLocation = new google.maps.LatLng(@Model[0].Lat.ToString().Replace(',', '.'), @Model[0].Lng.ToString().Replace(',', '.'));
                }
                map.setCenter(initialLocation);

            }
            </text>}
            //Geolocation on Error without model
            else
            {<text>
            function handleNoGeolocation(errorFlag) {
                if (errorFlag == true)
                {
                    alert("Geolocalização falhou.");
                    initialLocation = padrao;
                }
                else
                {
                    alert("Seu broweser náo suporta geolocalização.");
                    initialLocation = padrao;
                }
                map.setCenter(initialLocation);
            }
            </text>}

            //Markers
            @if (Model != null)
            {
                if (Model.Count == 0)
                {
                    <text>alert("Nenhum ônibus encontrado")</text>
                }
                foreach (var item in Model)
                {
                <text>
            var marker_@Model.IndexOf(item) = new google.maps.Marker({
                position:  new google.maps.LatLng(@item.Lat.ToString().Replace(',', '.'), @item.Lng.ToString().Replace(',', '.')),
                map: map,
                animation: google.maps.Animation.DROP,
            });
            var infowindow_@Model.IndexOf(item) = new google.maps.InfoWindow({
                content: 'Linha:@item.Line - Velocidade: @item.Speed KM/h - Onibus @item.Id <br/> Ultima atualização em @item.Date.ToString()'
            });

            google.maps.event.addListener(marker_@Model.IndexOf(item), 'click', function () {
                infowindow_@(Model.IndexOf(item)).open(map, marker_@Model.IndexOf(item))
            });

            </text>

                    }
                }
        }

        //Map Start
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
}

<div class="jumbotron">
    <div class="col-md-12">
        <img class="img-circle pull-right" style="margin-top:-60px;" src="~/Content/AWT-Bus.png" />
        <h1>Rio, Cade meu ônibus?</h1>        
    </div>
    <div class="col-md-12">
        <p>Localizador de ônibus da cidade do Rio de Janeiro</p>
    </div>



        <div class="row well">
            @using (Html.BeginForm("index"))
        {
                <div class="form-inline">
                    <label class="control-label">
                        Buscar Linha:
                    </label>
                    <input type="text" name="line" class="form-control" placeholder="Ex: 918">
                    <input type="submit" class="btn btn-success" value="Buscar" />
                </div>
        }

            <div id="map-canvas">
                <div class="map-canvas">
                </div>
            </div>
            <p class="text-right ">
                Ultima Atualização em:@Bus.API.PositionSearcher.LastSearch.ToString()
                - Atualizações a cada: @Bus.API.PositionSearcher.SecondIntevalToRefresh segundos, tolerancia maxima no mapa de @Bus.API.PositionSearcher.MaxRefreshTime Minutos
            </p>
        </div>
    </div>
